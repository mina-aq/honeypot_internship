Building tanner_redis
#1 [internal] load build definition from Dockerfile
#1 sha256:a93cabb1cf59604f6d64154703ab47ff3fb54eb671f565505cc7e2a904914615
#1 transferring dockerfile: 349B 0.0s done
#1 DONE 0.4s

#2 [internal] load metadata for docker.io/library/redis:alpine
#2 sha256:80d2076e5d55d284f0e082a4fbfa454a31616a4f07aa09ecdb3cd21e21444964
#2 DONE 1.0s

#3 [internal] load .dockerignore
#3 sha256:674e0172a49428a0a097a4647b187e5d51578f1ae0a42f3f09b3fec77cf67a9e
#3 transferring context: 2B done
#3 DONE 0.3s

#7 [1/3] FROM docker.io/library/redis:alpine@sha256:48501c5ad00d5563bc30c075c7bcef41d7d98de3e9a1e6c752068c66f0a8463b
#7 sha256:57bad36fd2b9164a1e879f2f31bc8831024ce238f9fccb0ffc6972e13640f6c7
#7 DONE 0.0s

#6 [internal] load build context
#6 sha256:887fb9f5c9ec59cca73228887c5ad81b0aaad81e8e18fe05ca63ec451d28df55
#6 transferring context: 101B done
#6 DONE 0.3s

#5 [2/3] ADD dist/ /root/dist/
#5 sha256:96acf672174735a5330ce9037642331d3447d87466765c4f68ed94b4d7545b62
#5 CACHED

#4 [3/3] RUN apk -U --no-cache add redis &&     cp /root/dist/redis.conf /etc &&     rm -rf /root/* &&     rm -rf /tmp/* /var/tmp/* &&     rm -rf /var/cache/apk/*
#4 sha256:d157d96601953678a3fb32ef09987412a473f30e327f3e68625e0c17c674be2a
#4 CACHED

#8 exporting to image
#8 sha256:8faaa3074da66df5f9821dbfc8ffab396add24de432222901cf6f27dcc634f22
#8 exporting layers done
#8 writing image sha256:f8968a40e08a74bb2dea757f79a3b0bf941f1e097018417b9d2b0a3eef635772 0.1s done
#8 naming to docker.io/mushorg/redis:latest
#8 naming to docker.io/mushorg/redis:latest 0.0s done
#8 DONE 0.2s
Building tanner_phpox
#1 [internal] load build definition from Dockerfile
#1 sha256:8448967abdee032bb8fb2537dcfa43fff49efccf6bba078ad8cd5576bc2b034b
#1 transferring dockerfile:
#1 transferring dockerfile: 1.26kB 0.0s done
#1 DONE 0.6s

#2 [internal] load metadata for docker.io/library/alpine:3.18
#2 sha256:6dae591072f262218300fe0091046c377dab421c9f9c97008eb1ca4afd6d4af1
#2 DONE 1.1s

#3 [internal] load .dockerignore
#3 sha256:07ffb83e44e5a887b5e6f335228f4e20e034d8e226a774fc45b3cef0368ce1b4
#3 transferring context: 2B done
#3 DONE 0.4s

#6 [1/3] FROM docker.io/library/alpine:3.18@sha256:de0eb0b3f2a47ba1eb89389859a9bd88b28e82f5826b6969ad604979713c2d4f
#6 sha256:b25600781ebf307675f6f4f51a65e684ff5d330c267e74ecdd57664854267046
#6 DONE 0.0s

#5 [2/3] RUN apk -U --no-cache add                build-base                file                git                make                php                php81-dev                php-tokenizer                python3                py3-pip                python3-dev                re2c &&     git clone --depth=1 https://github.com/mushorg/BFR /opt/BFR &&     cd /opt/BFR &&     php --version &&     phpize &&     ./configure       --enable-bfr &&     make &&     make install &&     cd / &&     rm -rf /opt/BFR /tmp/* /var/tmp/* &&     php --ini | grep Loaded &&     echo "zend_extension = "$(find /usr -name bfr.so) >> /etc/php81/php.ini &&     git clone --depth=1 https://github.com/mushorg/phpox /opt/phpox &&     cd /opt/phpox &&     pip install -r requirements.txt &&     make &&     apk del --purge build-base                     git                     php-dev                     python3-dev &&     rm -rf /root/* &&     rm -rf /var/cache/apk/*
#5 sha256:b0150d56524ccc656f238b8e751c256d6289bf08e26bd48b65c96d2ab52e3c92
#5 CACHED

#4 [3/3] WORKDIR /opt/phpox
#4 sha256:4ca7fd02291d3ffb9238905130c61d4371e2ab31d26e6cf42fdf07e3ad1c04f6
#4 CACHED

#7 exporting to image
#7 sha256:ba29e5e329adf07afa47f19b84ef64ccab31f8603c79c938a6798224de1fdb5c
#7 exporting layers done
#7 writing image sha256:151fa6d7c41d6a68a6da3f914cd74674d160e211d350844d26ab63da6c6eef0c 0.1s done
#7 naming to docker.io/mushorg/phpox:latest 0.0s done
#7 DONE 0.2s
Building tanner_api
#1 [internal] load build definition from Dockerfile
#1 sha256:220dc57b36b7859dbd39a90f928ae2ba6e574482f29ca4293ce9067408fc4b60
#1 transferring dockerfile: 1.27kB done
#1 DONE 0.5s

#2 [internal] load metadata for docker.io/library/alpine:3.15
#2 sha256:a5b09b156ca91a3a0487ea48ee0a9713cc2a0a3cc558e3fa071bdeadaf7cd986
#2 DONE 0.3s

#3 [internal] load .dockerignore
#3 sha256:2c20fb0ba3edb2088c52cbb4126c231074a9de89f14dac440fef76d5fe99e2ff
#3 transferring context: 2B done
#3 DONE 0.4s

#8 [1/4] FROM docker.io/library/alpine:3.15@sha256:19b4bcc4f60e99dd5ebdca0cbce22c503bbcff197549d7e19dab4f22254dc864
#8 sha256:05cf46d97487a3aa08e61ea13809e83f876e234b0f712a1dd649831dc811e5f9
#8 DONE 0.0s

#7 [internal] load build context
#7 sha256:7a37d5405a7c75bd58769b5bde833ffdb24110bed22f09f7d652f19217a10b24
#7 transferring context: 1.62kB done
#7 DONE 0.4s

#5 [3/4] RUN apk -U --no-cache add                build-base                git                libcap                libffi-dev                libressl-dev                linux-headers                py3-yarl                python3                python3-dev                py3-pip &&     git clone --depth=1 https://github.com/mushorg/tanner /opt/tanner &&     cp /root/dist/config.yaml /opt/tanner/tanner/data/ &&     cd /opt/tanner/ &&     python3 -m venv tanner-env &&     source /opt/tanner/tanner-env/bin/activate &&     pip install --upgrade pip &&     pip3 install --no-cache-dir wheel &&     pip3 install --no-cache-dir -r requirements.txt &&     python3 setup.py install &&     cd / &&     chown -R nobody:nobody /opt/tanner &&     apk del --purge             build-base             linux-headers             python3-dev &&     rm -rf /root/* &&     rm -rf /tmp/* /var/tmp/* &&     rm -rf /var/cache/apk/*
#5 sha256:760fbfeb15aba7ba4b89a4c655da62d59cb09a2c9527e26b9ee8498b6ce34b24
#5 CACHED

#6 [2/4] ADD dist/ /root/dist/
#6 sha256:77f11e8149227ffec543488aa54fe504d4e94151ae648ed2c801c39206bdaa2d
#6 CACHED

#4 [4/4] WORKDIR /opt/tanner
#4 sha256:8e3671da926ee1b437cd625d24042aeddfef1e61f1df8ffdcbb8bb3b80c76607
#4 CACHED

#9 exporting to image
#9 sha256:74487f8d33e78a3bdbb56f6cdf2cd6aa75cc6e98a7d9c81f0a86817ecf7e60e8
#9 exporting layers done
#9 writing image sha256:5daf69164f6415c79a1d6159029608e4f5c4604b293e8907b440349ff4715b76 0.1s done
#9 naming to docker.io/mushorg/tanner:latest
#9 naming to docker.io/mushorg/tanner:latest 0.0s done
#9 DONE 0.2s
Building tanner_web
#1 [internal] load build definition from Dockerfile
#1 sha256:f28260d14cf00603ffa0c496dd2e78afe9f7717af7a3beff104567e7ec1ae71c
#1 transferring dockerfile: 1.27kB done
#1 DONE 0.3s

#2 [internal] load metadata for docker.io/library/alpine:3.15
#2 sha256:a5b09b156ca91a3a0487ea48ee0a9713cc2a0a3cc558e3fa071bdeadaf7cd986
#2 DONE 0.9s

#3 [internal] load .dockerignore
#3 sha256:7318166654b3738631228c77889c14e5cf869a3aaca91985079e04f855d94a11
#3 transferring context:
#3 transferring context: 2B done
#3 DONE 0.1s

#8 [1/4] FROM docker.io/library/alpine:3.15@sha256:19b4bcc4f60e99dd5ebdca0cbce22c503bbcff197549d7e19dab4f22254dc864
#8 sha256:05cf46d97487a3aa08e61ea13809e83f876e234b0f712a1dd649831dc811e5f9
#8 DONE 0.0s

#7 [internal] load build context
#7 sha256:5584adfe52de30eb894a25a9560a6342e435e41ca18e9ab4498cdff14581aa0c
#7 transferring context: 62B done
#7 DONE 0.1s

#6 [2/4] ADD dist/ /root/dist/
#6 sha256:a148d5e5bf911aa22ac3ade439a03578d9d69e760347cfc87a31d2baad9651de
#6 CACHED

#5 [3/4] RUN apk -U --no-cache add                build-base                git                libcap                libffi-dev                libressl-dev                linux-headers                py3-yarl                python3                python3-dev                py3-pip &&     git clone --depth=1 https://github.com/mushorg/tanner /opt/tanner &&     cp /root/dist/config.yaml /opt/tanner/tanner/data/ &&     cd /opt/tanner/ &&     python3 -m venv tanner-env &&     source /opt/tanner/tanner-env/bin/activate &&     pip install --upgrade pip &&     pip3 install --no-cache-dir wheel &&     pip3 install --no-cache-dir -r requirements.txt &&     python3 setup.py install &&     cd / &&     chown -R nobody:nobody /opt/tanner &&     apk del --purge             build-base             linux-headers             python3-dev &&     rm -rf /root/* &&     rm -rf /tmp/* /var/tmp/* &&     rm -rf /var/cache/apk/*
#5 sha256:305b580771eda43f5841dcde38f6803693db6858202995cc2d8c5b8217b66baa
#5 CACHED

#4 [4/4] WORKDIR /opt/tanner
#4 sha256:b19bfbb8f07b2de7e625e1e6390a2f9e91d07b97b4963926a66812307ed8dc71
#4 CACHED

#9 exporting to image
#9 sha256:d4d4b7eb56ec756bd0cdde28d257a6367e4e387676afdcc0156541fa210a06f7
#9 exporting layers done
#9 writing image sha256:5daf69164f6415c79a1d6159029608e4f5c4604b293e8907b440349ff4715b76 0.1s done
#9 naming to docker.io/mushorg/tanner:latest
#9 naming to docker.io/mushorg/tanner:latest 0.1s done
#9 DONE 0.1s
Building tanner
#1 [internal] load build definition from Dockerfile
#1 sha256:ef2e74efc35b68620fe48b9f12d7166734e69754ecbe004aa02b6d267305a82d
#1 transferring dockerfile: 1.27kB done
#1 DONE 0.3s

#2 [internal] load metadata for docker.io/library/alpine:3.15
#2 sha256:a5b09b156ca91a3a0487ea48ee0a9713cc2a0a3cc558e3fa071bdeadaf7cd986
#2 DONE 0.3s

#3 [internal] load .dockerignore
#3 sha256:9db5e907baab9d510c57e94ec396b0e43191bfb73fcfde2ff9f3d56e6d27dc43
#3 transferring context: 2B done
#3 DONE 0.1s

#8 [1/4] FROM docker.io/library/alpine:3.15@sha256:19b4bcc4f60e99dd5ebdca0cbce22c503bbcff197549d7e19dab4f22254dc864
#8 sha256:05cf46d97487a3aa08e61ea13809e83f876e234b0f712a1dd649831dc811e5f9
#8 DONE 0.0s

#7 [internal] load build context
#7 sha256:77d44d51235750fe82c5ce7820039b16623a9bb3d2f0b1b12ec6d3d8576c1269
#7 transferring context: 62B done
#7 DONE 0.1s

#6 [2/4] ADD dist/ /root/dist/
#6 sha256:e59fbab9f45715799e922beef5571f708513fae3218d0263c4703649f55f0ac3
#6 CACHED

#5 [3/4] RUN apk -U --no-cache add                build-base                git                libcap                libffi-dev                libressl-dev                linux-headers                py3-yarl                python3                python3-dev                py3-pip &&     git clone --depth=1 https://github.com/mushorg/tanner /opt/tanner &&     cp /root/dist/config.yaml /opt/tanner/tanner/data/ &&     cd /opt/tanner/ &&     python3 -m venv tanner-env &&     source /opt/tanner/tanner-env/bin/activate &&     pip install --upgrade pip &&     pip3 install --no-cache-dir wheel &&     pip3 install --no-cache-dir -r requirements.txt &&     python3 setup.py install &&     cd / &&     chown -R nobody:nobody /opt/tanner &&     apk del --purge             build-base             linux-headers             python3-dev &&     rm -rf /root/* &&     rm -rf /tmp/* /var/tmp/* &&     rm -rf /var/cache/apk/*
#5 sha256:97d3174e50dc4f04923c92efc0f1eb6e643aff27668dcbc84dba8cbad6d72492
#5 CACHED

#4 [4/4] WORKDIR /opt/tanner
#4 sha256:17dd1348b469efd79bb7badefa5935f5cce0892eb9f12320bea622f74126242f
#4 CACHED

#9 exporting to image
#9 sha256:57f89d2989060edc62f6f9245dac8cedb54b929bf937ac0075d36f0db029dc86
#9 exporting layers done
#9 writing image sha256:5daf69164f6415c79a1d6159029608e4f5c4604b293e8907b440349ff4715b76 0.1s done
#9 naming to docker.io/mushorg/tanner:latest
#9 naming to docker.io/mushorg/tanner:latest 0.1s done
#9 DONE 0.1s
tanner_phpox is up-to-date
tanner_redis is up-to-date
tanner_api is up-to-date
tanner_web is up-to-date
tanner is up-to-date
Attaching to tanner_phpox, tanner_redis, tanner_api, tanner_web, tanner
[33mtanner_api      |[0m ======== Running on http://tanner_api:8092 ========
[33mtanner_api      |[0m (Press CTRL+C to quit)
[36mtanner          |[0m 
[36mtanner          |[0m       _________    _   ___   ____________
[36mtanner          |[0m      /_  __/   |  / | / / | / / ____/ __ \
[36mtanner          |[0m       / / / /| | /  |/ /  |/ / __/ / /_/ /
[36mtanner          |[0m      / / / ___ |/ /|  / /|  / /___/ _, _/
[36mtanner          |[0m     /_/ /_/  |_/_/ |_/_/ |_/_____/_/ |_|
[36mtanner          |[0m 
[36mtanner          |[0m     
[36mtanner          |[0m Debug logs will be stored in /tmp/tanner/tanner.log
[36mtanner          |[0m Error logs will be stored in /tmp/tanner/tanner.err
[36mtanner          |[0m Data logs will be stored in /tmp/tanner/tanner_report.json
[36mtanner          |[0m ======== Running on http://tanner:8090 ========
[36mtanner          |[0m (Press CTRL+C to quit)
[35mtanner_redis    |[0m 1:C 26 Jun 2025 14:18:40.806 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
[35mtanner_redis    |[0m 1:C 26 Jun 2025 14:18:40.806 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
[35mtanner_redis    |[0m 1:C 26 Jun 2025 14:18:40.806 * Redis version=8.0.2, bits=64, commit=00000000, modified=1, pid=1, just started
[35mtanner_redis    |[0m 1:C 26 Jun 2025 14:18:40.806 * Configuration loaded
[35mtanner_redis    |[0m 1:M 26 Jun 2025 14:18:40.807 * monotonic clock: POSIX clock_gettime
[35mtanner_redis    |[0m                 _._                                                  
[35mtanner_redis    |[0m            _.-``__ ''-._                                             
[35mtanner_redis    |[0m       _.-``    `.  `_.  ''-._           Redis Open Source            
[35mtanner_redis    |[0m   .-`` .-```.  ```\/    _.,_ ''-._      8.0.2 (00000000/1) 64 bit
[35mtanner_redis    |[0m  (    '      ,       .-`  | `,    )     Running in standalone mode
[35mtanner_redis    |[0m  |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
[35mtanner_redis    |[0m  |    `-._   `._    /     _.-'    |     PID: 1
[35mtanner_redis    |[0m   `-._    `-._  `-./  _.-'    _.-'                                   
[35mtanner_redis    |[0m  |`-._`-._    `-.__.-'    _.-'_.-'|                                  
[35mtanner_redis    |[0m  |    `-._`-._        _.-'_.-'    |           https://redis.io       
[35mtanner_redis    |[0m   `-._    `-._`-.__.-'_.-'    _.-'                                   
[35mtanner_redis    |[0m  |`-._`-._    `-.__.-'    _.-'_.-'|                                  
[35mtanner_redis    |[0m  |    `-._`-._        _.-'_.-'    |                                  
[35mtanner_redis    |[0m   `-._    `-._`-.__.-'_.-'    _.-'                                   
[35mtanner_redis    |[0m       `-._    `-.__.-'    _.-'                                       
[35mtanner_redis    |[0m           `-._        _.-'                                           
[35mtanner_redis    |[0m               `-.__.-'                                               
[35mtanner_redis    |[0m 
[35mtanner_redis    |[0m 1:M 26 Jun 2025 14:18:40.809 * Server initialized
[35mtanner_redis    |[0m 1:M 26 Jun 2025 14:18:40.809 * Ready to accept connections tcp
[32mtanner_phpox    |[0m ======== Running on http://127.0.0.1:8088 ========
[32mtanner_phpox    |[0m (Press CTRL+C to quit)
[34mtanner_web      |[0m ======== Running on http://tanner_web:8091 ========
[34mtanner_web      |[0m (Press CTRL+C to quit)
